<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://laolaolulu.github.io/</id><title>Programmer's Notes</title><subtitle>Programmer's Notes - Technology Sharing</subtitle> <updated>2023-11-15T17:57:58+08:00</updated> <author> <name>lipeng</name> <uri>https://laolaolulu.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://laolaolulu.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://laolaolulu.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 lipeng </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>将scrfd模型转换为onnx成功历程</title><link href="https://laolaolulu.github.io/posts/run-scrfd2onnx/" rel="alternate" type="text/html" title="将scrfd模型转换为onnx成功历程" /><published>2023-11-09T00:00:00+08:00</published> <updated>2023-11-09T07:21:19+08:00</updated> <id>https://laolaolulu.github.io/posts/run-scrfd2onnx/</id> <content src="https://laolaolulu.github.io/posts/run-scrfd2onnx/" /> <author> <name>lipeng</name> </author> <category term="人脸识别" /> <summary> scrfd官方文档 , 作者转换好了点击去下载 python世界发展过快,版本之间依赖不兼容问题很是头疼;避免这种问题浪费时间笔者总结了以下六点 …… 不要相信自己搭的绝配环境,来装个mini conda随意折腾,听人劝吃饱饭.乖~ # conda常用命令 # 创建环境 conda create --name test python==3.9.18 # 进入创建的环境 conda activate test # 查看自己创建了多少环境 conda env list # 删除不要的环境 conda env remove --name test 成功步骤环境:安装时提示缺少什么包就安装 # 安装pytorch conda install pytorch==1.9.1 torchvision==0.10.1 torchaudio=... </summary> </entry> <entry><title>流行的人脸检测识别模型集合下载</title><link href="https://laolaolulu.github.io/posts/face-model-download/" rel="alternate" type="text/html" title="流行的人脸检测识别模型集合下载" /><published>2023-11-07T00:00:00+08:00</published> <updated>2023-11-11T01:10:23+08:00</updated> <id>https://laolaolulu.github.io/posts/face-model-download/</id> <content src="https://laolaolulu.github.io/posts/face-model-download/" /> <author> <name>lipeng</name> </author> <category term="人脸识别" /> <summary> 人脸检测 SCRFD 名称 kps(包含眼鼻口)5关键点 大小 时间 scrfd_500m.onnx download 2.18MB 2022.08.23 scrfd_1g.onnx download 2.42MB 2021.03.24 scrfd_2.5g.onnx download 2.57MB 2021.03.24 scrfd_10g.onnx download 14.7MB 2021.03.24 scrfd_34g.onnx download 3... </summary> </entry> <entry><title>使用C#(sharp)-OpenCv(仅)来推理scrfd模型实现人脸检测</title><link href="https://laolaolulu.github.io/posts/csharp-scrfd-opencv/" rel="alternate" type="text/html" title="使用C#(sharp)-OpenCv(仅)来推理scrfd模型实现人脸检测" /><published>2023-11-07T00:00:00+08:00</published> <updated>2023-11-11T01:20:58+08:00</updated> <id>https://laolaolulu.github.io/posts/csharp-scrfd-opencv/</id> <content src="https://laolaolulu.github.io/posts/csharp-scrfd-opencv/" /> <author> <name>lipeng</name> </author> <category term="人脸识别" /> <summary> scrfd官网介绍文档 目前最优秀的人脸检测算法 使用OpenCvSharp库来进行图片预处理以及模型推理 scrfd.onnx模型下载 如何使用 已发布到nuget 源码在github dotnet add package FaceTrain.OpenCV //读取模型文件 var modelBytes = File.ReadAllBytes("Resource\\Model\\SCRFD\\scrfd_10g_kps.onnx"); //读取要检测的图片 var imgBytes = File.ReadAllBytes("Resource\\Img\\test.png"); //实例化网络 using var net = new FaceTrain.OpenCV.SCRFD(modelBytes); //执行推理拿到结果 var faces = net.Det... </summary> </entry> <entry><title>使用C#(sharp)-OnnxRuntime(仅)来推理scrfd模型实现人脸检测</title><link href="https://laolaolulu.github.io/posts/csharp-scrfd-onnxruntime/" rel="alternate" type="text/html" title="使用C#(sharp)-OnnxRuntime(仅)来推理scrfd模型实现人脸检测" /><published>2023-11-07T00:00:00+08:00</published> <updated>2023-11-11T01:21:07+08:00</updated> <id>https://laolaolulu.github.io/posts/csharp-scrfd-onnxruntime/</id> <content src="https://laolaolulu.github.io/posts/csharp-scrfd-onnxruntime/" /> <author> <name>lipeng</name> </author> <category term="人脸识别" /> <summary> scrfd官网介绍文档 目前最优秀的人脸检测算法 使用高性能的OnnxRuntime推理模型,告别臃肿的opencv库 使用ImageSharp库来进行图片预处理(ps:图片预处理速度很慢各位有什么好的推荐下) scrfd.onnx模型下载 如何使用 已发布到nuget 源码在github dotnet add package FaceTrain.OnnxRuntime //读取模型文件 var modelBytes = File.ReadAllBytes("Resource\\Model\\SCRFD\\scrfd_10g_kps.onnx"); //读取要检测的图片 var imgBytes = File.ReadAllBytes("Resource\\Img\\test.png"); //实例化网络 using var net = new FaceTra... </summary> </entry> <entry><title>使用Emscripten将Opencv代码编译为OpenCV.js(WebAssembly)</title><link href="https://laolaolulu.github.io/posts/emscripten-opencv/" rel="alternate" type="text/html" title="使用Emscripten将Opencv代码编译为OpenCV.js(WebAssembly)" /><published>2023-10-23T00:00:00+08:00</published> <updated>2023-11-08T17:44:23+08:00</updated> <id>https://laolaolulu.github.io/posts/emscripten-opencv/</id> <content src="https://laolaolulu.github.io/posts/emscripten-opencv/" /> <author> <name>lipeng</name> </author> <category term="人脸识别" /> <summary> 编译OpenCV.js 注意用 linux 环境,windows 下各种错误我已放弃 Emscripten官方安装文档 OpenCV.js官方编译文档 # Get the emsdk repo git clone https://github.com/emscripten-core/emsdk.git # Enter that directory cd emsdk # Fetch the latest version of the emsdk (not needed the first time you clone) git pull # Download and install the latest SDK tools. ./emsdk install latest # Make the "latest" SDK "active" for the curren... </summary> </entry> </feed>
